# Made by CookieMaster51 on github :) 
# <3 if ur reading this

import requests
import PIL.Image # pip install pillow
import xlsxwriter # pip install xlsxwriter
import os

IMAGE_FOLDER_NAME = "images"

# Var to ask if we should open the file at the end
do_open = True

# Name of the temporary img file
filename = "tempimg.jpg"

print("""  _____ __  __  _____    _______ ____       ________   _______ ______ _      
 |_   _|  \/  |/ ____|  |__   __/ __ \     |  ____\ \ / / ____|  ____| |     
   | | | \  / | |  __      | | | |  | |    | |__   \ V / |    | |__  | |     
   | | | |\/| | | |_ |     | | | |  | |    |  __|   > <| |    |  __| | |     
  _| |_| |  | | |__| |     | | | |__| |    | |____ / . \ |____| |____| |____ 
 |_____|_|  |_|\_____|     |_|  \____/     |______/_/ \_\_____|______|______|
""")
# Asks the user a thing
chose = False
while not chose:
    url_or_file = input("Would you like to input the image as a URL or as a file? Type U or F:    ")
    if url_or_file != "U" and url_or_file != "F":
        print("That is not U or F, Try again")
    else:
        chose = True

do_url = True if url_or_file == "U" else False



# Just gets the image from the URL
if do_url:
    valid = False
    while not valid:
        image_url = input("Please enter a image URL to excelify!\n")

        try:
            img_data = requests.get(image_url).content
            valid = True
        except requests.exceptions.MissingSchema:
            print("That is not a vaild image URL please try again!")

    with open(filename, 'wb') as handler:
        handler.write(img_data)

# If the user wants from a file

else:
    path = os.getcwd()
    path += "\\images"

    print("Here are all the images:")
    print("==========================")
    all_imgs = os.listdir(path)
    for i in range(0, len(all_imgs)):
        print(f"{i}: {all_imgs[i]}")

    try:
        want = int(input("\nWhat is the number that you would like to excelify?   "))

        filename = IMAGE_FOLDER_NAME + "\\" + all_imgs[want]
    except:
        print("That is not a vaild choice!")
        do_open = False


# Making a new excel doc


workbook = xlsxwriter.Workbook('image.xlsx')
worksheet = workbook.add_worksheet()

# Defining dictionaries for the conditional formating
red_col = {
'type': '2_color_scale',
'min_type': 'num',
"max_type": "num",
"min_value": 0,
"max_value": 255,
"min_color": "#000000",
"max_color": "#FF0000"
}
green_col = {
'type': '2_color_scale',
'min_type': 'num',
"max_type": "num",
"min_value": 0,
"max_value": 255,
"min_color": "#000000",
"max_color": "#00FF00"
}
blue_col = {
'type': '2_color_scale',
'min_type': 'num',
"max_type": "num",
"min_value": 0,
"max_value": 255,
"min_color": "#000000",
"max_color": "#0000FF"
}


# Making the column headings
alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
col = alphabet

for i in range(26):
    for j in range(26):
        col.append(f"{alphabet[i]}{alphabet[j]}")

for i in range(26):
    for j in range(26):
        for k in range(26):
            col.append(f"{alphabet[i]}{alphabet[j]}{alphabet[k]}")

# Opens the file
if do_open:
    try:
        with PIL.Image.open(filename) as pic:
            height_ratio = pic.height/pic.width
            # Makes the image a certain size
            pic_resized = pic.resize((220, int(220 * height_ratio)))
            pic_resized = pic_resized.save(filename)

    except PIL.UnidentifiedImageError:
        print("The URL you inputed is not an image! make sure that you rightclick and select 'open image in new tab'")
        do_open = False

if do_open:
    with PIL.Image.open(filename) as pic:
        # Loops through every column
        for x_pos in range(pic.width):
            # Loops through every row
            for y_pos in range(pic.height):
                # Gets the RGB value of that pixel as a tuple
                pixel_rgb = pic.getpixel((x_pos, y_pos))
                red, green, blue = pixel_rgb[0], pixel_rgb[1], pixel_rgb[2] 
                
                # Puts the vaules of each pixel into the cells in the spreadsheet
                worksheet.write(f"{col[x_pos]}{y_pos*3 + 1}", red)
                worksheet.write(f"{col[x_pos]}{y_pos*3 + 2}", green)
                worksheet.write(f"{col[x_pos]}{y_pos*3 + 3}", blue)

                
        # Loops through every row
        for row in range(pic.height):
            # Applies conditional formatting to every row
            worksheet.conditional_format(f'A{row*3 + 1}:{col[pic.width]}{row*3 + 1}', red_col)
            worksheet.conditional_format(f'A{row*3 + 2}:{col[pic.width]}{row*3 + 1}', green_col)
            worksheet.conditional_format(f'A{row*3 + 3}:{col[pic.width]}{row*3 + 1}', blue_col)

    # Closes the excel doc
    try:
        workbook.close()
    except:
        print("Close the excel file and try again")

# Gets rid of the temporary img file fi it was made
if do_url:
    os.remove("tempimg.jpg")

# Opens the file if we should open it
directory = os.getcwd()

if do_open:
    os.system("image.xlsx")
